# Aliases CubaPP use. Original: https://github.com/cubapp/dotfiles
# Use on your own risk ;-) 
###### Aliases ######
alias ..="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias d='dirs -v | head -10'
alias l='ls -lah'
alias la='ls -lAh'
alias ll='ls -lha'
alias lsa='ls -lah'
alias lt='ls -altr'
alias lh='ls -altrh'
alias lS='ls -alSr'
# very often I need to paste the fullpath of the file to scp. lf just show me. 
alias lf='readlink -f '
alias md='mkdir -p'
alias rd='rmdir'
alias cat='cat -v'
alias odd='od -A x -t x1z -w32 -v'
alias armdump='/xxx/arm-build/install/bin/arm-none-eabi-objdump -D -b binary -marm'
# dir diff using git, requires two dirsnames
# dirdiff directoryA directoryB
alias dirdiff="git diff --no-index "
# Get geo and other info about an IP address
alias ipip='function _ipip(){ echo "IP Query for: $1:"; curl http://ipinfo.io/$1; echo " "; }; _ipip'
# Get myIP address
alias myip='curl http://ipecho.net/plain; echo ;'
alias wtfip='dig +short myip.opendns.com @resolver1.opendns.com'
# wwget just pretends to be an old browser. Debug log is appended to the logfile (appended, not deleted ;-)
alias wwget='wget --header="User-Agent: Mozilla/5.0 (Windows NT 5.1; rv:23.0) Gecko/20100101 Firefox/23.0" --header="Accept: image/png,image/*;q=0.8,*/*;q=0.5" --header="Accept-Language: en-US,en;q=0.5" --header="Accept-Encoding: gzip, deflate" --header="Referer: https://www.google.com" -d -v -a wwget-log.txt'
# egrp greps the output for several keywords I use 
alias egrp="egrep -i 'bin|admin|root|default|busybox|proc|status|anime|route|asswor|helpe|http|watchdog' "
# grep IP from stdin
alias grepIP='grep -E -o "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"'
# Linux architectures and stuff
alias ARCHS='echo \{arc,arm,arm4,arm5,arm5n,arm6,arm7,arm8,mips,mipsel,mpsl,sh4,x86_64,x86,x64,Armv61,armv61,i686,ppc,ppc440,i586,m68k,sh,spc,sparc,superh,telnetd,bins\}'
# Tmux - when there is tmux running, attach to it, else run a new instance
# 2024-04-03 tmux -u for NetBSD with Oh My Zsh Angoster scheme 
alias tm='tmux -u a || tmux -u'
# hate Linux ip command. 'ipa' gives me Addresses and Routes
alias ipa='echo "------- Addresses:"; ip -c -br a ; echo "------- Routes: "; ip -c route | column -t'
alias lsofi='lsof -i -n -P'
alias ssi='ss -ntaupe'
# using exa for better ls
alias etree='exa -abghHlT'
#strings with parameters: show offset in HEX -t x 
#			: show spaces -w 
alias sttr='strings -t x -w '
alias sless='strings -t x -w|less '

###### Functions #######
# mkcd - creates dir $1 and cd into it
function mkcd() { mkdir -p "$1" && cd "$1"; };

# Generate script to rename files in $PWD to its SHA hashes
# in case of sha256move we not only move the files to its sha256 representation, but also prints the reverse script
function sha1move(){ for i in * ; do shasum "$i" ; done  | awk '{ print "mv " $2 " " $1 }' > .sha ; sh -x .sha;  };
# unlike sha1, the sha256 moves the files and prints the reverse script (which you can use later)
function sha256move(){
                for i in * ; do sha256sum "${i}" ; done  | awk '{ print "mv " $2 " " $1 }' > .mv256 ;
                sh .mv256;  echo -n "# Moved: "; wc -l .mv256 ; echo "# Reverse move: ";
                awk '{print $1 " " $3 " " $2 }' < .mv256 ;
};

# function mvallsha256 moves everything that has 64chars in the filename to a new dir $1 
# alias mvsha256='mv ???????????????????????????????????????????????????????????????? '
function mvallsha256(){
        mkdir -p $1
        mv ???????????????????????????????????????????????????????????????? $1
}

#enumerate subdomains
function subdomains(){ echo "Domain info about $1: "; curl -s https://www.virustotal.com/ui/domains/$1/subdomains\?limit\=39 | grep self ;} ;

# Function to return NT hash from ther passwodr (first parameter)
function nthash(){ echo -n "NT hash from password $1: "; echo -n $1 | iconv -t utf16le | openssl md4; }; 

# xor utility from https://github.com/dirtbags/fluffy
# then function unxor parameter1   parameter2        
#                      \- filename  \- key 0x22
function unxor(){ echo "Unxor $1 with $2: "; xor $2 < $1 | strings ; };

# Firefox to grab the screenshot of the page
FFOX="/Applications/Firefox.app/Contents/MacOS/firefox";
function ffscreenshot(){ $FFOX --private-window  -screenshot tw.png --headless  --new-instance $1  ;}; 

# A simple function to call a given program over each file in the dir
# (I am lazy to write: "for i in * ; do this "$i" ; done"
function doithere(){ for i in * ; do "$@" "${i}" ; done }

# A simple function to un upx all files in the dir
function upx.all(){ mkdir .uupx; for i in * ; do upx.out -d ".uupx/${i}" -o "${i}.uupx"; done ; rmdir .uupx || echo " >>>> UPXed binary found. Go to .uupx dir "; }

##### A function to turn SHA256 filenames into the original names. The name -> SHA file is in .mv file 
# The function turns .mv into .mv2 and execute it verbosely
# .mv: 
#  mv cal 7e3778a2874959624134298d1bc45882f3cc7409be89d4bedd7c4b124d6f478c
# .mv2:
#  mv 7e3778a2874959624134298d1bc45882f3cc7409be89d4bedd7c4b124d6f478c cal
function fromsha() { awk '{print $1 " " $3 " " $2 }' < .mv > .mv2; sh -x ./.mv2 ; };

# print printable characters
#
function ascii() {
 printf '%b\n' $(printf '\\%03o' {30..127})
}

# URLdecode - pretty self explanatory
#
function urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

# `o` with no arguments opens the current directory, otherwise opens the given
# location (Mac os X) 
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# cht.sh like new man :-)
function cht.sh () {
        # Separate arguments with '/', preserving spaces within them
        local query=$(IFS=/ ; echo "$*")
        curl "cht.sh/${query}"
}

# sslss it a short to run strings 'malware' | less
sslss(){ strings  -w "$@" | less ; }

#dtto with readelf
rsslss(){ readelf  -p .rodata  "$@" | less ; }

###### Usage ######
# Usage: put the aliases file whereever you like and source it in .bashrc or .zshrc via 
# [ -f ~/.aliases ] && source ~/.aliases 
